{"version":3,"sources":["i18n.js","providers/CalendarProvider/index.js","providers/ColorProvider/Helper/index.js","providers/ColorProvider/index.js","config.js","providers/MainProvider/index.js","providers/ThemeProvider/index.js","components/Calendar/CalendarDays/index.js","components/Calendar/CalendarHeader/index.js","components/Calendar/CalendarControls/index.js","components/Calendar/CalendarEvents/CalendarEventInfo/index.js","components/Calendar/CalendarEvents/index.js","components/Calendar/CalendarDay/index.js","components/Calendar/CalendarWeek/index.js","components/Calendar/index.js","components/Events/EventAttributes/index.js","components/Events/EventInfo/index.js","components/Events/EventItem/index.js","components/Slider/SliderControls/SliderControlDate/index.js","components/Slider/SliderControls/index.js","components/Slider/index.js","components/Events/index.js","layout/Footer/index.js","components/LangSelect/index.js","components/ViewType/index.js","layout/Header/index.js","layout/Content/index.js","components/Theme/index.js","layout/Main/index.js","serviceWorker.js","index.js"],"names":["i18n","use","initReactI18next","init","resources","en","translation","common_en","pt","common_pt","lng","fallbackLng","interpolation","escapeValue","CalendarContext","createContext","selectedDate","Date","now","currentDateItems","selectedDateFresh","currentDate","setCurrentDate","CalendarProvider","props","_useState","useState","_useState2","Object","slicedToArray","setSelectedDate","_useState3","_useState4","_useState5","_useState6","setCurrentDateItems","react_default","a","createElement","Provider","value","date","items","item","filter","today","Array","isArray","map","dateFns","compareAsc","push","filterItems","children","newColor","_HSLtoRGB","h","s","l","r","g","b","rd","Math","floor","max","min","hueToRGB","m","n","o","q","p","HSLtoRGB","random","_HSLtoRGB2","concat","toString","RGBtoHex","ColorContext","color","setNewColor","ColorProvider","setColor","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","MainContext","MainProvider","dist_index_esm","assign","firebase","path","orderByValue","_ref","ThemeContext","theme","themes","ThemeProvider","--background-color","--text-color","setTheme","setThemeColor","CalendarDays","t","useTranslation","className","days","monthStart","startOfMonth","currentMonth","startDate","startOfWeek","weekStartsOn","_loop","i","day","format","addDays","isSameMonth","isSameDay","key","onClick","onDateClick","renderDays","CalendarHeader","onMonthName","type","month","addMonths","subMonths","getTodayDate","dd","getDate","mm","getMonth","yyyy","getFullYear","onPrevNext","data-remove","monthPrev","parseInt","monthSelect","yearPrev","lastYear","getYearAgo","yearSelect","currentYear","viewPrevMonth","CalendarControls","parse","setCurrentMonth","data-disabled","CalendarEventInfo","date-empty","empty","index","name","address","description","site","href","target","rel","CalendarEvents","events","event","CalendarEvents_CalendarEventInfo","length","CalendarDay","formattedDate","difference","differenceInCalendarDays","onElement","data-index","data-full","fullDay","data-today","isToday","data-weekend","isWeekend","data-line-top","weekCount","disabled","Calendar_CalendarEvents","CalendarWeek","findDate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","Calendar_CalendarControls","monthEnd","endOfMonth","endDate","endOfWeek","rows","Calendar_CalendarDay","renderWeek","Calendar","calendarContext","useContext","colorContext","Calendar_CalendarHeader","dateFormat","onBgColor","Calendar_CalendarDays","Calendar_CalendarWeek","EventAttributes","formatHour","attributes","label","EvenInfo","country","formatTitle","Events_EventAttributes","EvenItem","alt","src","image","EventInfo","react","SliderControlDate","data-disable","current","getItem","checkDay","onNextPrev","SliderControls","setCurrent","data-type","SliderControls_SliderControlDate","Slider","direction","setDirection","itemsChilds","React","Children","child","data-active","data-direction","data-current","Slider_SliderControls","Number","isInteger","callback","Events","components_Slider","abs","differenceInCalendarMonths","EventItem","Footer","LangSelect","languages","sort","language","changeLanguage","_this","this","es","getLanguages","Component","ViewType","typeView","onTypeView","Header","components_ViewType","components_LangSelect","Content","setTypeView","mainContext","themeContext","checkView","getSize","width","document","body","clientWidth","documentElement","height","clientHeight","useEffect","handleResize","window","addEventListener","removeEventListener","providers_CalendarProvider","providers_ColorProvider","layout_Header","components_Events","components_Calendar","layout_Footer","Theme","themeRef","useRef","element","propsCSS","entries","forEach","_ref2","prop","style","setProperty","ref","Main","fallback","providers_MainProvider","ThemeProvider_ThemeProvider","Consumer","context","components_Theme","layout_Content","Boolean","location","hostname","match","ReactDOM","render","layout_Main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ypBAMAA,IACGC,IAAIC,KACJC,KAAK,CACJC,UAAW,CACTC,GAAI,CACFC,YAAaC,GAEfC,GAAI,CACFF,YAAaG,IAGjBC,IAAK,KACLC,YAAa,CAAC,KAAM,MACpBC,cAAe,CACbC,aAAa,KAIJb,EAAf,EAAeA,2BClBTc,EAAkBC,wBAAc,CACpCC,aAAc,IAAIC,KAAKA,KAAKC,OAC5BC,iBAAkB,aAClBC,kBAAmB,aACnBC,YAAa,KACbC,eAAgB,eA+DHC,EA3DU,SAACC,GAAU,IAAAC,EAEQC,mBAAS,IAAIT,KAAKA,KAAKC,QAF/BS,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE1BT,EAF0BW,EAAA,GAEZG,EAFYH,EAAA,GAAAI,EAKML,mBAAS,IAAIT,KAAKA,KAAKC,QAL7Bc,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAK1BV,EAL0BW,EAAA,GAKbV,EALaU,EAAA,GAAAC,EAQgBP,mBAAS,IARzBQ,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAQ1Bd,EAR0Be,EAAA,GAQRC,EARQD,EAAA,GAuClC,OACEE,EAAAC,EAAAC,cAACxB,EAAgByB,SAAjB,CAA0BC,MACtB,CACExB,eACAG,mBACAC,kBAbkB,SAACqB,EAAMC,GAC/BZ,EAAgBW,GAEhB,IAAME,EAvBY,SAAAD,GAClB,IAAME,EAAS,GACTC,EAAQ,IAAI5B,KAElB,QAAI6B,MAAMC,QAAQL,KAChBA,EAAMM,IAAI,SAAAL,GAKR,OAJ6C,IAAzCM,IAAQC,WAAWP,EAAKF,KAAMI,IAChCD,EAAOO,KAAKR,IAGP,IAGFC,GAUIQ,CAAYV,GACzBP,EAAoBQ,IAUdtB,cACAC,mBAGHE,EAAM6B,WCrBEC,EAVE,WACf,IADqBC,EAhCN,SAACC,EAAGC,EAAGC,GACtB,IAAIC,EAAGC,EAAGC,EAEJC,EAAK,SAACzB,GACV,OAAO0B,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,IAAQ,IAAJ7B,EAAS,KAAM,KAG/C8B,EAAW,SAACC,EAAGC,EAAGC,GAGtB,OAFIA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACZA,EAAI,EAAI,EAAUF,EAAc,GAATC,EAAID,GAASE,EACpCA,EAAI,GAAcD,EAClBC,EAAI,EAAI,EAAUF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAC3CF,GAGHG,EAAIb,EAAI,GAAMA,GAAK,EAAID,GAAKC,EAAID,EAAIC,EAAID,EACxCe,EAAI,EAAId,EAAIa,EAMlB,OAJAZ,EAAIQ,EAASK,EAAGD,EAAGf,EAAI,EAAE,GACzBI,EAAIO,EAASK,EAAGD,EAAGf,GACnBK,EAAIM,EAASK,EAAGD,EAAGf,EAAI,EAAE,GAElB,CAACM,EAAGH,GAAIG,EAAGF,GAAIE,EAAGD,IAaLY,CAHNV,KAAKW,SAGiB,EAAU,KAFjCX,KAAKC,MAAsB,GAAhBD,KAAKW,UAAiB,KAFzBC,EAAA/C,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAMrB,OAXe,SAACI,EAAGC,EAAGC,GACtB,UAAAe,OAAWjB,EAAEkB,SAAS,KAAtBD,OAA4BhB,EAAEiB,SAAS,KAAvCD,OAA6Cf,EAAEgB,SAAS,KAUjDC,CANcH,EAAA,GAAAA,EAAA,GAAAA,EAAA,KCzBjBI,EAAehE,wBAAc,CACjCiE,MAAO,GACPC,YAAa,eAkCAC,EA1BO,SAAC1D,GAAU,IAAAC,EAEHC,mBAAS4B,KAFN3B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvBuD,EAFuBrD,EAAA,GAEhBwD,EAFgBxD,EAAA,GAY/B,OACES,EAAAC,EAAAC,cAACyC,EAAaxC,SAAd,CAAuBC,MACrB,CAAEwC,MAAOA,EAAOC,YATA,WAGlB,OAFAE,EAAS7B,KAEF0B,KAQJxD,EAAM6B,6CCjCA+B,EAAS,CACpBC,OAAQC,0CACRC,WAAYD,uCACZE,YAAaF,8CACbG,UAAWH,uBAEXI,cAAeJ,mCACfK,kBAAmBL,eACnBM,MAAON,uCCEHO,EAAc9E,wBAAc,CAChC2B,MAAO,KAgCMoD,EAvBM,SAAAtE,GAEnB,OACEY,EAAAC,EAAAC,cAACyD,EAAA,EAADnE,OAAAoE,OAAA,CAAmBC,SAAUA,KAAcb,GACzChD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAqBG,KAAK,UAAUC,aAAc,cAC/C,SAAAC,GAAe,IAAZ5D,EAAY4D,EAAZ5D,MACF,OAAOJ,EAAAC,EAAAC,cAACuD,EAAYtD,SAAb,CACLC,MAAO,CACLE,MAAOF,IAERhB,EAAM6B,cC3BbgD,EAAetF,wBAAc,CACjCuF,MAAO,KACPC,OAAQ,KAIJC,EAAgB,SAAAhF,GAAS,IAAAC,EAEDC,mBAAS,CACnC+E,qBAAsB,UACtBC,eAAgB,YAJW/E,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAErB6E,EAFqB3E,EAAA,GAEdgF,EAFchF,EAAA,GAoB7B,OACES,EAAAC,EAAAC,cAAC+D,EAAa9D,SAAd,CAAuBC,MACrB,CAAE8D,QAAOM,cAdS,SAAA5B,GAChBA,GAMF2B,EALc,CACZF,qBAAsBzB,EACtB0B,eAAgB1B,OAYjBxD,EAAM6B,WCsBEwD,UA3CM,SAACrF,GAAU,IAEtBsF,EAAMC,cAAND,EA4BR,OACE1E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,0BA1BE,WAOjB,IANA,IACMC,EAAO,GAEPC,EAAajE,IAAQkE,aAAa3F,EAAM4F,cACxCC,EAAYpE,IAAQqE,YAAYJ,EAAY,CAAEK,aAAc,IAL3CC,EAAA,SAOdC,GACP,IAAMC,EAAMzE,IAAQ0E,OAAO1E,IAAQ2E,QAAQP,EAAWI,GAPrC,MASjBR,EAAK9D,KACHf,EAAAC,EAAAC,cAAA,OAAK0E,UAAS,OAAApC,OACX3B,IAAQ4E,YAAYH,EAAKR,GAEtBjE,IAAQ6E,UAAUJ,EAAKlG,EAAMR,cAAgB,WAAa,GAD1D,YAEF+G,IAAKN,EAAGO,QAAS,kBAAMxG,EAAMyG,YAAYP,KAC1CZ,EAAEY,MATAD,EAAI,EAAGA,EAAI,EAAGA,IAAKD,EAAnBC,GAcT,OAAOrF,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,kBAAkBC,GAMrCiB,MCsDQC,UAtFQ,SAAA3G,GAAS,IAEtBsF,EAAMC,cAAND,EAGFsB,EAAc,SAACC,GACnB,IAAMC,EAAiB,SAATD,EAAkBpF,IAAQsF,UAAU/G,EAAM4F,aAAc,GAAKnE,IAAQuF,UAAUhH,EAAM4F,aAAc,GAEjH,OAAON,EAAE7D,IAAQ0E,OAAOW,EAAO,UAI3BG,EAAe,WACnB,IAAI5F,EAAQ,IAAI5B,KACZyH,EAAK7F,EAAM8F,UACXC,EAAK/F,EAAMgG,WAAa,EAEtBC,EAAOjG,EAAMkG,cAMnB,OAJIL,EAAK,KAAMA,EAAK,IAAMA,GACtBE,EAAK,KAAMA,EAAK,IAAMA,GAE1B/F,EAAQiG,EAAO,IAAMF,EAAK,IAAMF,GAyClC,OACEtG,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,oBACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,6BACb5E,EAAAC,EAAAC,cAAA,UAAQ0E,UAAU,gBAAgBgB,QAAS,kBACzCxG,EAAMwH,WAAW,SAASC,cAzBZ,WACpB,IAAMC,EAAYC,SAASlG,IAAQ0E,OAAO,IAAI1G,KAAQ,MAChDmI,EAAcD,SAASlG,IAAQ0E,OAAOnG,EAAM4F,aAAc,MAC1DiC,EAAWF,SAlBA,WACjB,IAAIG,EAAW,IAAIrI,KAAKA,KAAKC,OACzBwH,EAAKY,EAASX,UACdC,EAAKU,EAAST,WAAa,EAEzBC,EAAOQ,EAASP,YAAYN,GAAgB,EAMlD,OAJIC,EAAK,KAAMA,EAAK,IAAMA,GACtBE,EAAK,KAAMA,EAAK,IAAMA,GAE1BU,EAAWR,EAQeS,IACpBC,EAAaL,SAASlG,IAAQ0E,OAAOnG,EAAM4F,aAAc,SACzDqC,EAAcN,SAASlG,IAAQ0E,OAAO,IAAI1G,KAAQ,SAExD,OAAIwI,IAAgBD,IACdN,EAAYE,KAKPK,GAAeJ,GAYmBK,IAAkBtB,EAAY,SAEvEhG,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,0BACX5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASF,EAAE7D,IAAQ0E,OAAOnG,EAAM4F,aAAc,UAC9DhF,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAQ/D,IAAQ0E,OAAOnG,EAAM4F,aAAc,UAG7DhF,EAAAC,EAAAC,cAAA,UAAQ0E,UAAU,gBAAgBgB,QAAS,kBACzCxG,EAAMwH,WAAW,UAAUZ,EAAY,aCtClCuB,UArCU,SAAAnI,GAEvB,IAAMN,EAAM+B,IAAQ2G,MAAM,IAAI3I,MAGtB6F,EAAMC,cAAND,EAcR,OACE1E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,sBACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,+BACb5E,EAAAC,EAAAC,cAAA,UACE0E,UAAU,WACVgB,QAAS,kBAVfxG,EAAMqI,gBAAgB3I,QACtBM,EAAMyG,YAAY/G,IAUZ4I,gBAhBE5I,EAAI2H,WAAa,IAAOM,SAASlG,IAAQ0E,OAAOnG,EAAM4F,aAAc,QAgBrCN,EAAE,cCF9BiD,UA1BW,SAAAvI,GAExB,OACEY,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,eAAegD,aAAYxI,EAAMyI,MAAMpF,WAAYkD,IAAKvG,EAAM0I,OAC1E9H,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,SACX5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAQxF,EAAM2I,MAC9B/H,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,WAAWxF,EAAM4I,SACjChI,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,eAAexF,EAAM6I,aACrCjI,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAQxF,EAAMiB,MAE7BjB,EAAM8I,MACLlI,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,OAAOuD,KAAM/I,EAAM8I,KAAME,OAAO,SAASC,IAAI,uBAAuBjJ,EAAM8I,UCwBlFI,UA/BQ,SAAAlJ,GASrB,OACEY,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,mBACZlE,MAAMC,QAAQvB,EAAMmJ,SAAWvI,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,UACzCxF,EAAMmJ,OAAO3H,IAAI,SAAC4H,EAAOV,GAAR,OAChB9H,EAAAC,EAAAC,cAACuI,EAADjJ,OAAAoE,OAAA,CAAmB+B,IAAKmC,GAAWU,EAAnC,CAA0CnI,MAXhCA,EAWiDmI,EAAMnI,KARlEQ,IAAQ0E,OAAOlF,EAFP,YAUiEwH,OAAO,KAXtE,IAACxH,KAcVjB,EAAMmJ,OAAOG,QAAU1I,EAAAC,EAAAC,cAACuI,EAAD,CAAmBZ,OAAO,KAGtDnH,MAAMC,QAAQvB,EAAMmJ,SAAWnJ,EAAMmJ,OAAOG,OAAS,GACpD1I,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QACd5E,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,kBAAb,kBC+CK+D,UApEK,SAAAvJ,GAElB,IAAMwJ,EAAgB,SAAAtD,GACpB,OAAOzE,IAAQ0E,OAAOD,EAAK,MAoC7B,OACEtF,EAAAC,EAAAC,cAAA,OACE0E,UAAS,iBAAApC,OAlCK,WAChB,IAAM8C,EAAMyB,SAASlG,IAAQ0E,OAAOnG,EAAMkG,IAAK,MACzCxG,EAAMiI,SAASlG,IAAQ0E,OAAO,IAAI1G,KAAQ,MAC1CgK,EAAahI,IAAQiI,yBAAyB1J,EAAMkG,IAAK,IAAIzG,MAEnE,OAAIyG,EAAMxG,GAAO+J,EAAa,EACrB,aACGhI,IAAQ4E,YAAYrG,EAAMkG,IAAKlG,EAAM0F,YAEtCjE,IAAQ6E,UAAUtG,EAAMkG,IAAKlG,EAAMR,cACrC,WACsE,IAApEiC,IAAQiI,yBAAyB1J,EAAMkG,IAAKlG,EAAM4F,cACpD,SAGF,GAPE,WA0BqB+D,IAC5BC,aAAY5J,EAAM0I,MAClBmB,YAAW7J,EAAM8J,QACjBC,aAAYtI,IAAQuI,QAAQhK,EAAMkG,KAClC+D,eAAcxI,IAAQyI,UAAUlK,EAAMkG,KACtCiE,mBAnBgC,IAApBnK,EAAMoK,WAEP3I,IAAQyI,UAAUlK,EAAMkG,MACf,IAAhBlG,EAAM0I,OAAgBc,EAAcxJ,EAAMkG,KAAO,GAAM,IAiB3DtF,EAAAC,EAAAC,cAAA,UAAQ0E,UAAU,QAChBgB,QAAS,kBAAMxG,EAAMyG,YAAYhF,IAAQ2G,MAAMpI,EAAMkG,MAAM,IAC3DmE,SAAU/I,MAAMC,QAAQvB,EAAMmJ,SAAWnJ,EAAMmJ,OAAOG,OAAS,IAEjE1I,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,OACX5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,UAAUgE,EAAcxJ,EAAMkG,OAGhDtF,EAAAC,EAAAC,cAACwJ,EAAD,CAAgBnB,OAAQnJ,EAAMmJ,YC0BrBoB,UApFM,SAACvK,GAEpB,IAAMwK,EAAW,SAAAvJ,GACf,GAAIA,EAAM,CACR,IACMiF,EAAMzE,IAAQ0E,OAAOlF,EADZ,cAETwE,EAAO,GAEb,GAAInE,MAAMC,QAAQvB,EAAMmJ,SAAWnJ,EAAMmJ,OAAOG,OAAS,EAAG,KAAAmB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC1D,QAAAC,EAAAC,EAAiB9K,EAAMmJ,OAAvB4B,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA+B,KAAtBtJ,EAAsB0J,EAAA7J,MAGzBkF,IAFazE,IAAQ0E,OAAO1E,IAAQ2G,MAAMjH,EAAKF,MANxC,eASTwE,EAAK9D,KAAKR,IAL4C,MAAAgK,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAK,EAAAM,QAAAN,EAAAM,SAAA,WAAAV,EAAA,MAAAC,GAS1D,OAAOlF,KAgDb,OACE7E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,kBACb5E,EAAAC,EAAAC,cAACuK,EAAD,CACEzF,aAAc5F,EAAM4F,aACpBa,YAAazG,EAAMyG,YACnB4B,gBAAiBrI,EAAMqI,kBAEzBzH,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,mBAjDA,WAYjB,IAXA,IAAME,EAAajE,IAAQkE,aAAa3F,EAAM4F,aAAc,CAAEG,aAAc,IACtEuF,EAAW7J,IAAQ8J,WAAW7F,EAAY,CAAEK,aAAc,IAC1DF,EAAYpE,IAAQqE,YAAYJ,EAAY,CAAEK,aAAc,IAC5DyF,EAAU/J,IAAQgK,UAAUH,EAAU,CAAEvF,aAAc,IAEtD2F,EAAO,GAETjG,EAAO,GACPS,EAAML,EACNuE,EAAY,EAETlE,GAAOsF,GAAWpB,EAAY,GAAG,CACtCA,GAAwB,EAExB,IAAK,IAAInE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMkD,EAASqB,EAAStE,GAExBT,EAAK9D,KAAKf,EAAAC,EAAAC,cAAC6K,EAAD,CACR7B,QAAS9J,EAAM8J,QACfrD,YAAazG,EAAMyG,YACnBP,IAAKA,EACLK,IAAKN,EACLyC,MAAOzC,EACPkD,OAAQA,EACRzD,WAAYA,EACZE,aAAc5F,EAAM4F,aACpBpG,aAAcQ,EAAMR,aACpB4K,UAAWA,KAEblE,EAAMzE,IAAQ2E,QAAQF,EAAK,GAG7BwF,EAAK/J,KAAKf,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,iBAAiBe,IAAKL,EAAK0D,aAAYQ,GAAY3E,IAE5EA,EAAO,GAGT,OAAOiG,EAW6BE,OCjBzBC,UAnDE,SAAA7L,GAEf,IAAM8L,EAAkBC,qBAAWzM,GAE7B0M,EAAeD,qBAAWxI,GAmBhC,OACE3C,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,YACb5E,EAAAC,EAAAC,cAACmL,EAAD,CACEC,WAAY,YACZtG,aAAckG,EAAgBjM,YAC9B2H,WAhBa,SAAAX,GACjB7G,EAAMmM,UAAUH,EAAavI,eAEhB,SAAToD,EACFiF,EAAgBhM,eAAe2B,IAAQsF,UAAU+E,EAAgBjM,YAAa,IAE9EiM,EAAgBhM,eAAe2B,IAAQuF,UAAU8E,EAAgBjM,YAAa,OAY9Ee,EAAAC,EAAAC,cAACsL,EAAD,CACExG,aAAckG,EAAgBjM,cAEhCe,EAAAC,EAAAC,cAACuL,EAAD,CACEzG,aAAckG,EAAgBjM,YAC9BsJ,OAAQnJ,EAAMkB,MACdA,MAAO4K,EAAgB5K,MACvBuF,YA9Bc,SAAAP,GAClB4F,EAAgBlM,kBAAkBsG,EAAK5G,EAAgB4B,QA8BnD1B,aAAcsM,EAAgBtM,aAC9B6I,gBAAiByD,EAAgBhM,eACjCQ,gBAAiBwL,EAAgBxL,qBCjB1BgM,UA1BS,SAAAtM,GAAS,IAEvBsF,EAAMC,cAAND,EAGR,OACE1E,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,cACZ5E,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,oBACZ5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASF,EAAE,SAC3B1E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASxF,EAAMuM,WAAWvM,EAAMmB,KAAKF,QAGtDK,MAAMC,QAAQvB,EAAMmB,KAAKqL,aAAexM,EAAMmB,KAAKqL,WAAWhL,IAAI,SAACL,EAAMuH,GAAP,OACjE9H,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,mBAAmBe,IAAKmC,GACpC9H,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASrE,EAAKsL,OAC9B7L,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASrE,EAAKH,aCazB0L,UA5BE,SAAA1M,GAEf,OACEY,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,qBACZxF,EAAMmB,KAAKwL,SAAW/L,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,WAClC5E,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,kBAAb,eACA5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAQxF,EAAMmB,KAAKwL,UAGrC/L,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,SACX5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAQxF,EAAM4M,YAAY5M,EAAMmB,KAAKF,OACrDL,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAQxF,EAAMmB,KAAKwH,MACnC/H,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,WAAWxF,EAAMmB,KAAKyH,UAGxChI,EAAAC,EAAAC,cAAC+L,EAAD,CAAiBN,WAAYvM,EAAMuM,WAAYpL,KAAMnB,EAAMmB,OAE3DP,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,eAAexF,EAAMmB,KAAK0H,gBCsB9BiE,UApCE,SAAA9M,GAAS,IAEhBsF,EAAMC,cAAND,EAmBR,OACE1E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,eACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,sBACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,MAAMuH,IAAK/M,EAAMmB,KAAKwH,KAAMqE,IAAKhN,EAAMmB,KAAK8L,SAG7DrM,EAAAC,EAAAC,cAACoM,EAAD,CAAW/L,KAAMnB,EAAMmB,KAAMoL,WAXd,SAACtL,GAClB,OAAOQ,IAAQ0E,OAAOlF,EAAM,UAU2B2L,YAtBrC,SAAA3L,GAClB,IAAMiF,EAAMzE,IAAQ0E,OAAOlF,EAAM,KAC3B6F,EAAQrF,IAAQ0E,OAAOlF,EAAM,OAEnC,OAAOL,EAAAC,EAAAC,cAACqM,EAAA,SAAD,KACLvM,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,OAAOU,GACvBtF,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASF,EAAEwB,WCsBlBsG,EArCW,SAAApN,GAAS,IAEzBsF,EAAMC,cAAND,EAeR,OACE1E,EAAAC,EAAAC,cAAA,OACE0E,UAAS,WAAApC,OAAapD,EAAM6G,MAC5BwG,eAA6B,SAAfrN,EAAM6G,KAAoC,IAAlB7G,EAAMsN,QAAgBtN,EAAMsN,UAAatN,EAAMsJ,OAAS,GAC9F1I,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,QAhBF,SAAAqB,GACf,IAAM1F,EAAOnB,EAAMkB,MAAMlB,EAAMuN,QAAQ1G,IAEvC,GAAI1F,aAAgBf,OAClB,OAAOQ,EAAAC,EAAAC,cAACqM,EAAA,SAAD,KACHvM,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,OAAO/D,IAAQ0E,OAAOhF,EAAKF,KAAM,MACjDL,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,SAASF,EAAE7D,IAAQ0E,OAAOhF,EAAKF,KAAM,UAUlCuM,CAASxN,EAAM6G,OAEtCjG,EAAAC,EAAAC,cAAA,UACE0E,UAAS,OAAApC,OAASpD,EAAM6G,MACxBL,QAAS,kBAAMxG,EAAMyN,WAAWzN,EAAM6G,QAAQvB,EAAEtF,EAAM6G,SCc/C6G,UAtCQ,SAAC1N,GAEtB,IAAMuN,EAAU,SAAC1G,GACf,IAAIyG,EAQJ,MANa,SAATzG,EACFyG,EAAWtN,EAAMsN,QAAU,EAAK,EAAKtN,EAAMsJ,OAAS,EAAMtJ,EAAMsN,QAAU,EACxD,SAATzG,IACTyG,EAAWtN,EAAMsN,QAAU,GAAOtN,EAAMsJ,OAAS,EAAMtJ,EAAMsN,QAAU,EAAK,GAGvEA,GAIHG,EAAa,SAAC5G,GAClB,IAAMyG,EAAUC,EAAQ1G,GACxB7G,EAAM2N,WAAWL,IAInB,OACE1M,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,mBAAmBoI,YAAW5N,EAAM6G,MACjDjG,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,yBAAyBe,IAAK,GAC3C3F,EAAAC,EAAAC,cAAC+M,EAADzN,OAAAoE,OAAA,GAAuBxE,EAAvB,CAA8B6G,KAAM,OAAQ4G,WAAYA,EAAYF,QAASA,EAAShH,IAAK,KAC3F3F,EAAAC,EAAAC,cAAC+M,EAADzN,OAAAoE,OAAA,GAAuBxE,EAAvB,CAA8B6G,KAAM,OAAQ4G,WAAYA,EAAYF,QAASA,EAAShH,IAAK,SCqBpFuH,UAlDA,SAAA9N,GAAS,IAAAC,EAEcC,mBAAS,QAFvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEd8N,EAFc5N,EAAA,GAEH6N,EAFG7N,EAAA,GAAAI,EAIUL,mBAAS,GAJnBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAId+M,EAJc9M,EAAA,GAILmN,EAJKnN,EAAA,GAuBhByN,EAAcC,IAAMC,SAAS3M,IAAIxB,EAAM6B,SAAU,SAACuM,EAAO1F,GAC7D,OAAO9H,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,eAAe6I,cAAaf,IAAY5E,EAAOnC,IAAKmC,GAAQ0F,KAInF,OACExN,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,SAAS8I,iBAAgBP,EAAWQ,eAAcjB,GAC/D1M,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,qBACXyI,GAGHrN,EAAAC,EAAAC,cAAC0N,EAAD,CACElB,QAASA,EACTpM,MAAOlB,EAAMkB,MACb2F,KAAM7G,EAAM6G,KACZ8G,WAxBsB,SAAAjF,GAC1B,IAAgC,IAA5B+F,OAAOC,UAAUhG,GAAkB,OAAO,EAE9CsF,EAAatF,EAAQ4E,EAAU,OAAS,QACxCK,EAAWjF,GAXI,SAAA4E,GACe,oBAAnBtN,EAAM2O,UACf3O,EAAM2O,SAASrB,GAUjBqB,CAASjG,IAoBLY,OAAQtJ,EAAMkB,MAAMoI,YCqBbsF,UAlDA,SAAC5O,GAEd,IAAM8L,EAAkBC,qBAAWzM,GAE7B0M,EAAeD,qBAAWxI,GAJRtD,EAOQC,mBAAS,GAPjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAOhBqN,EAPgBnN,EAAA,GAOPwN,EAPOxN,EAAA,GA8BxB,OACES,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,SACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,WACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,kBACZlE,MAAMC,QAAQvB,EAAMkB,QACnBN,EAAAC,EAAAC,cAAC+N,EAAD,CAAQvB,QAASA,EAASqB,SAzBnB,SAAArB,GACf,IAAkC,IAA9BmB,OAAOC,UAAUpB,GAAoB,OAAO,EAEhD,IAAMnM,EAAOnB,EAAMkB,MAAMoM,GAErBnM,aAAgBf,QACCmC,KAAKuM,IAAIrN,IAAQsN,2BAClCtN,IAAQ2G,MAAMjH,EAAKF,MAAO6K,EAAgBjM,cAE3B,IACfG,EAAMmM,UAAUH,EAAavI,eAC7BkK,EAAWL,GAEXxB,EAAgBhM,eAAe2B,IAAQ2G,MAAMjH,EAAKF,OAClD6K,EAAgBlM,kBAAkB6B,IAAQ2G,MAAMjH,EAAKF,MAAO6K,KAWVjF,KAAM,EAAG3F,MAAOlB,EAAMkB,OAC/DlB,EAAMkB,MAAMM,IAAI,SAACL,EAAMuH,GAAP,OACf9H,EAAAC,EAAAC,cAACkO,EAAD,CAAW7N,KAAMA,EAAMoF,IAAKmC,YC5B/BuG,UArBA,WAEb,OACErO,EAAAC,EAAAC,cAAA,UAAQ0E,UAAU,UAChB5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,gBACb5E,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,QACX5E,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,kBAAb,aAEA5E,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,KAAKuD,KAAK,YACrBnI,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,QAAhB,0EC8CG0J,+LAxCA1Q,GACX,QAAIA,aAAgB4B,UAAW,IAAU5B,OAErC8C,MAAMC,QAAQ/C,EAAK2Q,YACE3Q,EAAK2Q,UAAUC,OAEhB5N,IAAI,SAACL,EAAMuH,GAAP,OACxB9H,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,oBAAoBe,IAAKmC,GACrC9H,EAAAC,EAAAC,cAAA,UAAQ0E,UAAU,OAAO6I,cAAa7P,EAAK6Q,WAAalO,EAAMqF,QAAS,kBAAMhI,EAAK8Q,eAAenO,KAAQA,wCAaxG,IAAAoO,EAAAC,KACP,OACE5O,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,eACb5E,EAAAC,EAAAC,cAAA,QAAM0E,UAAU,qBACd5E,EAAAC,EAAAC,cAAA,KAAG0E,UAAU,kBAAb,aAGF5E,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,KACI,SAACnK,EAADV,GAAA,IAAMpG,EAANoG,EAAMpG,KAAN,OAAiBoC,EAAAC,EAAAC,cAAA,MAAI0E,UAAU,qBAAqB+J,EAAKG,aAAalR,cArCzDmR,cCmCVC,UAlCE,SAAA5P,GAAS,IAEhBsF,EAAMC,cAAND,EAEFwG,EAAkBC,qBAAWzM,GAGnC,OACEsB,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,aACb5E,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,WACb5E,EAAAC,EAAAC,cAAA,UACE0E,UAAU,MACV6I,cAAgC,IAAnBrO,EAAM6P,SACnBrJ,QAAS,kBAAMxG,EAAM8P,WAAW,KAC9BlP,EAAAC,EAAAC,cAAA,YAAOwE,EAAE,cAGb1E,EAAAC,EAAAC,cAAA,UACE0E,UAAU,MACV6I,cAAgC,IAAnBrO,EAAM6P,SACnBrJ,QAAS,kBAAMxG,EAAM8P,WAAW,IAChCzF,SAAU/I,MAAMC,QAAQuK,EAAgB5K,SAAW4K,EAAgB5K,MAAMoI,QACvE1I,EAAAC,EAAAC,cAAA,YAAOwE,EAAE,cCVNyK,UAfA,SAAA/P,GAEb,OACEY,EAAAC,EAAAC,cAAA,UAAQ0E,UAAU,UAChB5E,EAAAC,EAAAC,cAACkP,EAAahQ,GAEdY,EAAAC,EAAAC,cAACmP,EAAD,SCuESC,UAxEC,WAAM,IAAAjQ,EAEcC,mBAAS,GAFvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEZ4P,EAFY1P,EAAA,GAEFgQ,EAFEhQ,EAAA,GAKdiQ,EAAcrE,qBAAW1H,GAGzBgM,EAAetE,qBAAWlH,GAG1BsH,EAAY,SAAA3I,GAChB6M,EAAajL,cAAc5B,IAIvB8M,EAAY,WACZC,IAAUC,OAAS,KACrBL,EAAY,IAKVI,EAAU,WACd,MAAO,CACLC,MAAOC,SAASC,KAAKC,aAAeF,SAASG,gBAAgBD,YAC7DE,OAAQJ,SAASG,gBAAgBE,cAAgBL,SAASG,gBAAgBE,eAkB9E,OAbAC,oBAAU,WAGR,SAASC,IACPV,IAKF,OARAA,IAMAW,OAAOC,iBAAiB,SAAUF,GAE3B,kBAAMC,OAAOE,oBAAoB,SAAUH,MAKlDpQ,EAAAC,EAAAC,cAACsQ,EAAD,KACExQ,EAAAC,EAAAC,cAACuQ,EAAD,KACEzQ,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,WACb5E,EAAAC,EAAAC,cAACwQ,EAAD,CAAQzB,SAAUA,EAAUC,WAAYK,IAE1B,IAAbN,GACCjP,EAAAC,EAAAC,cAACyQ,EAAD,CACEpF,UAAWA,EACXjL,MAAOkP,EAAYlP,QAET,IAAb2O,GACCjP,EAAAC,EAAAC,cAAC0Q,EAAD,CACEtQ,MAAOkP,EAAYlP,MACnBiL,UAAWA,EACXgE,YAAaA,EACbN,SAAUA,IACdjP,EAAAC,EAAAC,cAAC2Q,EAAD,WCzCKC,UA9BD,SAAA1R,GAEZ,IAAM2R,EAAWC,iBAAO,MAiBxB,OALAb,oBAAU,WATiB,IAACc,EAASC,EAATD,EAUPF,GAVgBG,EAUN9R,EAAM8E,iBATX1E,QACtBA,OAAO2R,QAAQD,GAAUE,QAAQ,SAAApN,GAAmB,IAAAqN,EAAA7R,OAAAC,EAAA,EAAAD,CAAAwE,EAAA,GAAjBsN,EAAiBD,EAAA,GAAXjR,EAAWiR,EAAA,GAClDJ,EAAQvE,QAAQ6E,MAAMC,YAAYF,EAAMlR,MAQ3C,CAAChB,EAAM8E,QAIRlE,EAAAC,EAAAC,cAAA,OAAK0E,UAAU,QAAQ6M,IAAKV,GACzB3R,EAAM6B,YCYEyQ,UAzBF,SAAAtS,GAIX,OACEY,EAAAC,EAAAC,cAACqM,EAAA,SAAD,CAAUoF,SAAS,cACjB3R,EAAAC,EAAAC,cAAC0R,EAAD,KACE5R,EAAAC,EAAAC,cAAC2R,EAAkBzS,EACjBY,EAAAC,EAAAC,cAAC+D,EAAa6N,SAAd,KACG,SAACC,GAAD,OACC/R,EAAAC,EAAAC,cAAC8R,EAAUD,EACT/R,EAAAC,EAAAC,cAAC+R,EAAY7S,WCbT8S,QACW,cAA7B7B,OAAO8B,SAASC,UAEe,UAA7B/B,OAAO8B,SAASC,UAEhB/B,OAAO8B,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOvS,EAAAC,EAAAC,cAACsS,EAAD,MAAU3C,SAAS4C,eAAe,SDwH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7086c18f.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport common_en from './translations/en/common.json';\nimport common_pt from './translations/pt/common.json';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: common_en,\n      },\n      pt: {\n        translation: common_pt,\n      }\n    },\n    lng: \"en\",\n    fallbackLng: [\"en\", \"pt\"],\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\n\n// Calendar Context\nconst CalendarContext = createContext({ \n  selectedDate: new Date(Date.now()),\n  currentDateItems: () => {},\n  selectedDateFresh: () => {},\n  currentDate: null,\n  setCurrentDate: () => {},\n});\n\n// Calendar Provider\nconst CalendarProvider = (props) => {\n  // date\n  const [ selectedDate, setSelectedDate ] = useState(new Date(Date.now()));\n\n  // current date\n  const [ currentDate, setCurrentDate ] = useState(new Date(Date.now()));\n\n  // current item\n  const [ currentDateItems, setCurrentDateItems ] = useState([]);\n\n  // filter items\n  const filterItems = items => {\n    const filter = [];\n    const today = new Date();\n\n    if (Array.isArray(items)) {\n      items.map(item => {\n        if (dateFns.compareAsc(item.date, today) === 1) {\n          filter.push(item);\n        }\n\n        return true;\n      });\n\n      return filter;\n    }\n\n    return false;\n  }\n\n  // selecte date fresh\n  const selectedDateFresh = (date, items) => {\n    setSelectedDate(date);\n\n    const item = filterItems(items);\n    setCurrentDateItems(item);\n  };\n\n  // return\n  return (\n    <CalendarContext.Provider value={\n        {\n          selectedDate,\n          currentDateItems,\n          selectedDateFresh,\n          currentDate,\n          setCurrentDate,\n        }\n      }>\n      {props.children}\n    </CalendarContext.Provider>\n  )\n}\n\nCalendarProvider.propTypes = {\n  any: PropTypes.any,\n}\n\nexport { CalendarContext, CalendarProvider };\nexport default CalendarProvider;","// HSL to RGB\nconst HSLtoRGB = (h, s, l) => {\n  let r, g, b;\n  \n  const rd = (a) => {\n    return Math.floor(Math.max(Math.min(a * 256, 255), 0)); \n  };\n  \n  const hueToRGB = (m, n, o) => {\n    if (o < 0) o += 1;\n    if (o > 1) o -= 1;\n    if (o < 1 / 6) return m + (n - m) * 6 * o;\n    if (o < 1 / 2) return n;\n    if (o < 2 / 3) return m + (n - m) * (2 / 3 - o) * 6;\n    return m;\n  }\n  \n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  \n  r = hueToRGB(p, q, h + 1/3);\n  g = hueToRGB(p, q, h);\n  b = hueToRGB(p, q, h - 1/3);\n\n  return [rd(r), rd(g), rd(b)]\n};\n  \n// RGB to HEX\nconst RGBtoHex = (r, g, b) => {\n  return `#${r.toString(16)}${g.toString(16)}${b.toString(16)}`;\n};\n\n// new Color\nconst newColor = () => {\n  const hBase = Math.random();\n  const newL = Math.floor(Math.random() * 16) + 75;\n  \n  const [ r, g, b ] = HSLtoRGB(hBase, 1, newL * .01);\n\n  return RGBtoHex(r, g, b);\n};\n\nexport { newColor, RGBtoHex, HSLtoRGB };\nexport default newColor;","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport newColor from './Helper';\n\n/**\n * Theme Context\n */\nconst ColorContext = createContext({\n  color: '',\n  setNewColor: () => {},\n});\n\n/**\n * Color Provider\n * \n * @param {*} props \n */\nconst ColorProvider = (props) => {\n  // color\n  const [ color, setColor ] = useState(newColor());\n  \n  // Set New Color\n  const setNewColor = () => {\n    setColor(newColor());\n\n    return color;\n  }\n\n  // return\n  return (\n    <ColorContext.Provider value={\n      { color: color, setNewColor: setNewColor }\n    }>\n      {props.children}\n    </ColorContext.Provider>\n  );\n}\n\nColorProvider.propTypes = {\n  any: PropTypes.any,\n}\n\nexport { ColorContext, ColorProvider };\nexport default ColorProvider;","// config firebase\nexport const config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  \n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { FirestoreProvider, FirestoreCollection } from '@react-firebase/firestore';\nimport { config } from '../../config';\n\n/**\n * MainContext\n */\nconst MainContext = createContext({\n  items: []\n});\n\n/**\n * Main Provider\n *\n * @class MainProvider\n * @extends {Component}\n */\nconst MainProvider = props => {\n  // render\n  return (\n    <FirestoreProvider firebase={firebase} {...config}>\n      <FirestoreCollection path=\"events/\" orderByValue={\"created_on\"}>\n        {({ value }) => {\n          return <MainContext.Provider\n            value={{\n              items: value,\n            }}>\n            {props.children}\n          </MainContext.Provider>;\n        }}\n      </FirestoreCollection>\n    </FirestoreProvider>\n  )\n}\n\nMainProvider.propTypes = {\n  any: PropTypes.any,\n}\n\nexport { MainProvider, MainContext };\nexport default MainProvider;","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Theme Context\nconst ThemeContext = createContext({\n  theme: null,\n  themes: {},\n});\n\n// Theme Provider\nconst ThemeProvider = props => {\n  // theme\n  const [ theme, setTheme ] = useState({\n    '--background-color': '#91E1CB',\n    '--text-color': '#91E1CB',\n  });\n\n  // set theme color\n  const setThemeColor = color => {\n    if (color) {\n      const theme = {\n        '--background-color': color,\n        '--text-color': color,\n      };\n\n      setTheme(theme);\n    }\n  }\n\n  // render\n  return (\n    <ThemeContext.Provider value={\n      { theme, setThemeColor }\n    }>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  any: PropTypes.any,\n}\n\nexport { ThemeContext, ThemeProvider };\nexport default ThemeProvider;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\nimport { useTranslation } from 'react-i18next';\n\nimport './calendar-days.scss';\n\n/**\n * Calendar Days\n * \n * @param {*} props \n */\nconst CalendarDays = (props) => {\n  // translate\n  const { t } = useTranslation();\n\n  // render days\n  const renderDays = () => {\n    const dateFormat = \"dd\";\n    const days = [];\n\n    const monthStart = dateFns.startOfMonth(props.currentMonth);\n    const startDate = dateFns.startOfWeek(monthStart, { weekStartsOn: 1 });\n\n    for (let i = 0; i < 7; i++) {\n      const day = dateFns.format(dateFns.addDays(startDate, i), dateFormat);\n\n      days.push(\n        <div className={`day ${\n          !dateFns.isSameMonth(day, monthStart)\n            ? \"disabled\"\n            : dateFns.isSameDay(day, props.selectedDate) ? \"selected\" : \"\"\n        }`} key={i} onClick={() => props.onDateClick(day)}>\n          {t(day)}\n        </div>\n      );\n    }\n\n    return <div className=\"calendar--days\">{days}</div>;\n  }\n\n  // return\n  return (\n    <div className=\"calendar--header--days\">\n      {renderDays()}\n    </div>\n  );\n}\n\nCalendarDays.propTypes = {\n  currentMonth: PropTypes.object,\n  selectedDate: PropTypes.object,\n  onDateClick: PropTypes.func,\n}\n\nexport default CalendarDays;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\nimport { useTranslation } from 'react-i18next';\n\nimport './calendar-header.scss';\n\n/**\n * Calendar Header\n * \n * @param {*} props \n */\nconst CalendarHeader = props => {\n  // translate\n  const { t } = useTranslation();\n\n  // on month name\n  const onMonthName = (type) => {\n    const month = type === 'next' ? dateFns.addMonths(props.currentMonth, 1) : dateFns.subMonths(props.currentMonth, 1);\n    \n    return t(dateFns.format(month, 'MMMM'));\n  };\n\n  // get today date\n  const getTodayDate = () => {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n\n    const yyyy = today.getFullYear();\n\n    if (dd < 10) { dd = '0' + dd }\n    if (mm < 10) { mm = '0' + mm }\n\n    today = yyyy + '-' + mm + '-' + dd;\n    return today;\n  };\n\n  // get year ago\n  const getYearAgo = () => {\n    let lastYear = new Date(Date.now());\n    let dd = lastYear.getDate();\n    let mm = lastYear.getMonth() + 1;\n\n    const yyyy = lastYear.getFullYear(getTodayDate) - 1;\n\n    if (dd < 10) { dd = '0' + dd }\n    if (mm < 10) { mm = '0' + mm }\n\n    lastYear = yyyy;     \n    return lastYear;\n  };\n\n  // view prev month\n  const viewPrevMonth = () => {\n    const monthPrev = parseInt(dateFns.format(new Date(), 'M'));\n    const monthSelect = parseInt(dateFns.format(props.currentMonth, 'M'));\n    const yearPrev = parseInt(getYearAgo());\n    const yearSelect = parseInt(dateFns.format(props.currentMonth, 'YYYY'));\n    const currentYear = parseInt(dateFns.format(new Date(), 'YYYY'));\n\n    if (currentYear === yearSelect) {\n      if (monthPrev < monthSelect) {\n        return false;\n      }\n\n      return true;\n    } else if (currentYear >= yearPrev) {\n      return false;\n    } \n\n    return true;\n  };\n \n  // render\n  return (\n    <div className=\"calendar--header\">\n      <div className=\"calendar--header--content\">\n        <button className=\"btn-line prev\" onClick={() => \n          props.onPrevNext('prev')} data-remove={viewPrevMonth()}>{onMonthName('prev')}</button>\n\n        <p className=\"calendar--header--info\">\n          <span className=\"month\">{t(dateFns.format(props.currentMonth, 'MMMM'))}</span>\n          <span className=\"year\">{dateFns.format(props.currentMonth, 'YYYY')}</span>\n        </p>\n\n        <button className=\"btn-line next\" onClick={() => \n          props.onPrevNext('next')}>{onMonthName('next')}</button>\n      </div>\n    </div>\n  );\n}\n\nCalendarHeader.propTypes = {\n  currentMonth: PropTypes.object,\n  onPrevNext: PropTypes.func.isRequired,\n}\n\nexport default CalendarHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from 'date-fns';\nimport { useTranslation } from 'react-i18next';\n\nimport './calendar-controls.scss';\n\n/**\n * Calendar Controls\n * \n * @param {*} props \n */\nconst CalendarControls = props => {\n  // now\n  const now = dateFns.parse(new Date());\n\n  // translate\n  const { t } = useTranslation();\n\n  // disabled today\n  const disableButton = () => {\n    return (now.getMonth() + 1) === parseInt(dateFns.format(props.currentMonth, 'MM'));\n  }\n\n  // on today\n  const onToday = () => {\n    props.setCurrentMonth(now);\n    props.onDateClick(now);\n  };\n  \n  // return\n  return (\n    <div className=\"calendar--controls\">\n      <div className=\"calendar--controls--content\">\n        <button\n          className=\"btn prev\"\n          onClick={() => onToday()}\n          data-disabled={disableButton()}>{t('today')}</button>\n      </div>\n    </div>\n  )\n}\n\nCalendarControls.propTypes = {\n  currentMonth: PropTypes.object,\n  onDateClick: PropTypes.func.isRequired,\n  setCurrentMonth: PropTypes.func.isRequired,\n}\n\nexport default CalendarControls;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './calendar-event-info.scss';\n\n/**\n * Calendar Event Info\n * \n * @param {*} props \n */\nconst CalendarEventInfo = props => {\n  // return\n  return (\n    <li className=\"events--item\" date-empty={props.empty.toString()} key={props.index}>\n      <p className=\"event\">\n        <span className=\"name\">{props.name}</span>\n        <span className=\"address\">{props.address}</span>\n        <span className=\"description\">{props.description}</span>\n        <span className=\"hour\">{props.date}</span>\n        \n        {props.site &&\n          <a className=\"site\" href={props.site} target=\"_blank\" rel=\"noopener noreferrer\">{props.site}</a>}\n      </p>\n    </li>\n  )\n}\n\nCalendarEventInfo.propTypes = {\n  address: PropTypes.string,\n  date: PropTypes.string,\n  name: PropTypes.string,\n  index: PropTypes.number,\n  empty: PropTypes.bool.isRequired,\n  site: PropTypes.string,\n}\n\nexport default CalendarEventInfo;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\n\nimport CalendarEventInfo from './CalendarEventInfo';\n\nimport './calendar-events.scss';\n\n/**\n * Calendar Events\n * \n * @param {*} props \n */\nconst CalendarEvents = props => {\n  // format date\n  const formatDate = (date) => {\n    const format = 'HH:mm.a';\n\n    return dateFns.format(date, format);\n  };\n\n  // return\n  return (\n    <div className=\"calendar--event\">\n      {Array.isArray(props.events) && <ul className=\"events\">\n          {props.events.map((event, index) =>\n            <CalendarEventInfo key={index} {...event} date={formatDate(event.date)} empty={false} />\n          )}\n\n          {!props.events.length && <CalendarEventInfo empty={true} />}\n        </ul>}\n\n      {Array.isArray(props.events) && props.events.length > 1 &&   \n        <span className=\"more\">\n          <i className=\"material-icons\">more_horiz</i>\n        </span>}\n    </div>\n  );\n};\n\nCalendarEvents.propTypes = {\n  events: PropTypes.array,\n}\n\nexport default CalendarEvents;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from 'date-fns';\n\nimport CalendarEvents from '../CalendarEvents';\n\nimport './calendar-day.scss';\n\n/**\n * Calendar Day\n * \n * @param {*} props \n */\nconst CalendarDay = props => {\n  // formatted date\n  const formattedDate = day => {\n    return dateFns.format(day, \"D\");\n  }\n\n  // on element\n  const onElement = () => {\n    const day = parseInt(dateFns.format(props.day, 'D'));\n    const now = parseInt(dateFns.format(new Date(), 'D'));\n    const difference = dateFns.differenceInCalendarDays(props.day, new Date());\n\n    if (day < now && difference < 0) {\n      return \"disabled-d\";\n    } else if (!dateFns.isSameMonth(props.day, props.monthStart)) {\n      return \"disabled\";\n    } else if (dateFns.isSameDay(props.day, props.selectedDate)) {\n      return \"selected\";\n    } else if (dateFns.differenceInCalendarDays(props.day, props.currentMonth) === 0) {\n      return \"active\";\n    }\n\n    return \"\";\n  };\n\n  // on check top\n  const checkTop = () => {\n    const check = props.weekCount === 2;\n\n    if (check && dateFns.isWeekend(props.day)) {\n      if (props.index === 5 && (formattedDate(props.day) - 7) <= 0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // return\n  return (\n    <div\n      className={`calendar--day ${onElement()}`}\n      data-index={props.index}\n      data-full={props.fullDay}\n      data-today={dateFns.isToday(props.day)}\n      data-weekend={dateFns.isWeekend(props.day)}\n      data-line-top={checkTop()}>\n      <button className=\"dummy\"\n        onClick={() => props.onDateClick(dateFns.parse(props.day), true)}\n        disabled={Array.isArray(props.events) && props.events.length < 1}></button>\n\n      <p className=\"day\">\n        <span className=\"number\">{formattedDate(props.day)}</span>\n      </p>\n\n      <CalendarEvents events={props.events} />\n    </div>\n  )\n};\n\nCalendarDay.propTypes = {\n  day: PropTypes.object,\n  events: PropTypes.array,\n  index: PropTypes.number,\n  fullDay: PropTypes.object,\n  weekCount: PropTypes.number,\n}\n\nexport default CalendarDay;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\n\nimport CalendarControls from '../CalendarControls';\nimport CalendarDay from '../CalendarDay';\n\nimport './calendar-week.scss';\n\n// CalendarWeek\nconst CalendarWeek = (props) => {\n  // find date\n  const findDate = date => {\n    if (date) {\n      const format = 'YYYY/MM/DD';\n      const day = dateFns.format(date, format);\n      const days = [];\n\n      if (Array.isArray(props.events) && props.events.length > 0) {\n        for (let item of props.events) {\n          const dayEvent = dateFns.format(dateFns.parse(item.date), format);\n\n          if (day === dayEvent) {\n            days.push(item);\n          }\n        }\n\n        return days;\n      }\n    }\n  };\n\n  // render week\n  const renderWeek = () => {\n    const monthStart = dateFns.startOfMonth(props.currentMonth, { weekStartsOn: 1 });\n    const monthEnd = dateFns.endOfMonth(monthStart, { weekStartsOn: 1 });\n    const startDate = dateFns.startOfWeek(monthStart, { weekStartsOn: 1 });\n    const endDate = dateFns.endOfWeek(monthEnd, { weekStartsOn: 1 });\n\n    const rows = [];\n\n    let days = [];\n    let day = startDate;\n    let weekCount = 0;\n\n    while (day <= endDate || weekCount < 5) {\n      weekCount = weekCount + 1;\n\n      for (let i = 0; i < 7; i++) {\n        const events = findDate(day);\n\n        days.push(<CalendarDay\n          fullDay={props.fullDay}\n          onDateClick={props.onDateClick}\n          day={day}\n          key={i}\n          index={i}\n          events={events}\n          monthStart={monthStart}\n          currentMonth={props.currentMonth}\n          selectedDate={props.selectedDate}\n          weekCount={weekCount} />);\n\n        day = dateFns.addDays(day, 1);\n      }\n\n      rows.push(<div className=\"calendar--week\" key={day} data-index={weekCount}>{days}</div>);\n      \n      days = [];\n    }\n\n    return rows;\n  };\n\n  // render\n  return (\n    <div className=\"calendar--body\">\n      <CalendarControls\n        currentMonth={props.currentMonth}\n        onDateClick={props.onDateClick}\n        setCurrentMonth={props.setCurrentMonth} />\n      \n      <div className=\"calendar--month\">{renderWeek()}</div>\n    </div>\n  );\n}\n\nCalendarWeek.propTypes = {\n  items: PropTypes.any,\n  currentMonth: PropTypes.object,\n  onDateClick: PropTypes.func.isRequired,\n  setCurrentMonth: PropTypes.func.isRequired,\n}\n\nexport default CalendarWeek;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\n\nimport { CalendarContext } from './../../providers/CalendarProvider';\nimport { ColorContext } from '../../providers/ColorProvider';\n\nimport CalendarDays from './CalendarDays';\nimport CalendarHeader from './CalendarHeader';\nimport CalendarWeek from './CalendarWeek';\n\nimport './calendar.scss';\n\n// Calendar\nconst Calendar = props => {\n  // calendar context\n  const calendarContext = useContext(CalendarContext);\n  // color context\n  const colorContext = useContext(ColorContext);\n\n  // on date click\n  const onDateClick = day => {\n    calendarContext.selectedDateFresh(day, CalendarContext.items);\n  };\n\n  // on prev next\n  const onPrevNext = type => {\n    props.onBgColor(colorContext.setNewColor());\n\n    if (type === 'next') {\n      calendarContext.setCurrentDate(dateFns.addMonths(calendarContext.currentDate, 1));\n    } else {\n      calendarContext.setCurrentDate(dateFns.subMonths(calendarContext.currentDate, 1));\n    }\n  };\n\n  // return\n  return (\n    <div className=\"calendar\">\n      <CalendarHeader\n        dateFormat={'MMMM YYYY'}\n        currentMonth={calendarContext.currentDate}\n        onPrevNext={onPrevNext} />\n\n      <CalendarDays\n        currentMonth={calendarContext.currentDate} />\n\n      <CalendarWeek\n        currentMonth={calendarContext.currentDate}\n        events={props.items}\n        items={calendarContext.items}\n        onDateClick={onDateClick}\n        selectedDate={calendarContext.selectedDate}\n        setCurrentMonth={calendarContext.setCurrentDate}\n        setSelectedDate={calendarContext.setSelectedDate} />\n    </div>\n  );\n};\n\nCalendar.propTypes = {\n  items: PropTypes.any,\n  typeView: PropTypes.number,\n  setTypeView: PropTypes.func,\n}\n\nexport default Calendar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './event-attributes.scss';\n\n/**\n * Event list attributes\n * \n * @param {*} props \n */\nconst EventAttributes = props => {\n  // translate\n  const { t } = useTranslation();\n\n  // return\n  return (\n    <ul className=\"attributes\">\n      <li className=\"attributes--item\">\n        <span className=\"label\">{t('hour')}</span>\n        <span className=\"value\">{props.formatHour(props.item.date)}</span>\n      </li>\n\n      {Array.isArray(props.item.attributes) && props.item.attributes.map((item, index) =>\n        <li className=\"attributes--item\" key={index}>\n          <span className=\"label\">{item.label}</span>\n          <span className=\"value\">{item.value}</span>\n        </li>)}\n    </ul>\n  )\n};\n\nEventAttributes.propTypes = {\n  items: PropTypes.object,\n  formatHour: PropTypes.func.isRequired,\n}\n\nexport default EventAttributes;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport EventAttributes from '../EventAttributes';\n\nimport './event-info.scss';\n\n/**\n * Event List Info\n * \n * @param {*} props \n */\nconst EvenInfo = props => {\n  // return\n  return (\n    <div className=\"event--item--info\">\n      {props.item.country && <p className=\"country\">\n        <i className=\"material-icons\">location_on</i>\n        <span className=\"text\">{props.item.country}</span>\n      </p>}\n\n      <p className=\"title\">\n        <span className=\"date\">{props.formatTitle(props.item.date)}</span>\n        <span className=\"name\">{props.item.name}</span>\n        <span className=\"address\">{props.item.address}</span>\n      </p>\n\n      <EventAttributes formatHour={props.formatHour} item={props.item} />\n\n      <p className=\"description\">{props.item.description}</p>\n    </div>\n  )\n}\n\nEvenInfo.propTypes = {\n  item: PropTypes.object,\n  formatHour: PropTypes.func.isRequired,\n  formatTitle: PropTypes.func.isRequired,\n}\n\nexport default EvenInfo;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\nimport { useTranslation } from 'react-i18next';\n\nimport EventInfo from '../EventInfo';\n\nimport './event-item.scss';\n\n/**\n * Event List Item\n * \n * @param {*} props \n */\nconst EvenItem = props => {\n  // translate\n  const { t } = useTranslation();\n\n  // forma title\n  const formatTitle = date => {\n    const day = dateFns.format(date, 'D');\n    const month = dateFns.format(date, 'MMM');\n\n    return <Fragment>\n      <span className=\"day\">{day}</span>\n      <span className=\"month\">{t(month)}</span>\n    </Fragment>;\n  };\n\n  // format hour\n  const formatHour = (date) => {\n    return dateFns.format(date, 'HH:mm');\n  };\n\n  // return\n  return (\n    <div className=\"event--item\">\n      <div className=\"event--item--image\">\n        <img className=\"img\" alt={props.item.name} src={props.item.image} />\n      </div>\n\n      <EventInfo item={props.item} formatHour={formatHour} formatTitle={formatTitle} />\n    </div>\n  )\n}\n\nEvenItem.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default EvenItem;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Slider Control Date\n * \n * @param {*} props \n */\nconst SliderControlDate = props => {\n  // translate\n  const { t } = useTranslation();\n\n  // check day\n  const checkDay = type => {\n    const item = props.items[props.getItem(type)];\n\n    if (item instanceof Object) {\n      return <Fragment>\n          <span className=\"day\">{dateFns.format(item.date, 'D')}</span>\n          <span className=\"month\">{t(dateFns.format(item.date, 'MMM'))}</span>\n        </Fragment>;\n    }\n  };\n\n  // return\n  return (\n    <div\n      className={`control ${props.type}`}\n      data-disable={props.type === 'prev' ? props.current === 0 : props.current === (props.length - 1)}>\n      <div className=\"date\">{checkDay(props.type)}</div>\n      \n      <button\n        className={`btn ${props.type}`}\n        onClick={() => props.onNextPrev(props.type)}>{t(props.type)}</button>\n    </div>\n  )\n};\n\nSliderControlDate.propTypes = {\n  current: PropTypes.number.isRequired,\n  length: PropTypes.number.isRequired,\n  onNextPrev: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n}\n\nexport default SliderControlDate;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SliderControlDate from './SliderControlDate';\n\nimport './slider-controls.scss';\n\n/**\n * Slider Controls\n * \n * @param {*} props \n */\nconst SliderControls = (props) => {\n  // get item\n  const getItem = (type) => {\n    let current;\n\n    if (type === 'prev') {\n      current = (props.current - 1) < 0 ? (props.length - 1) : (props.current - 1);\n    } else if (type === 'next') {\n      current = (props.current + 1) <= (props.length - 1) ? (props.current + 1) : 0;\n    }\n\n    return current;\n  }\n\n  // on next prev\n  const onNextPrev = (type) => {\n    const current = getItem(type);\n    props.setCurrent(current);\n  };\n\n  // return\n  return (\n    <div className=\"slider--controls\" data-type={props.type}>\n      <div className=\"slider--controls--item\" key={1}>\n        <SliderControlDate {...props} type={'prev'} onNextPrev={onNextPrev} getItem={getItem} key={0} />\n        <SliderControlDate {...props} type={'next'} onNextPrev={onNextPrev} getItem={getItem} key={1} />\n      </div>\n    </div>\n  )\n}\n\nSliderControls.propTypes = {\n  current: PropTypes.any,\n  length: PropTypes.number,\n  setCurrent: PropTypes.func.isRequired,\n  type: PropTypes.number.isRequired,\n}\n\nexport default SliderControls;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SliderControls from './SliderControls';\n\nimport './slider.scss';\n\n// slider\nconst Slider = props => {\n  // direction\n  const [ direction, setDirection ] = useState('next');\n  // current\n  const [ current, setCurrent ] = useState(0);\n\n  // callback\n  const callback = current => {\n    if (typeof props.callback === 'function') {\n      props.callback(current);\n    }\n  };\n\n  // set current direaction\n  const setCurrentDirection = index => {\n    if (Number.isInteger(index) === false) return false;\n\n    setDirection(index > current ? 'next' : 'prev');\n    setCurrent(index);\n    callback(index);\n  }\n\n  // items childs\n  const itemsChilds = React.Children.map(props.children, (child, index) => {\n    return <li className=\"slider--item\" data-active={current === index} key={index}>{child}</li>\n  });\n\n  // render\n  return (\n    <div className=\"slider\" data-direction={direction} data-current={current}>\n      <ul className=\"slider--container\">\n        {itemsChilds}\n      </ul>\n\n      <SliderControls\n        current={current}\n        items={props.items}\n        type={props.type}\n        setCurrent={setCurrentDirection}\n        length={props.items.length} />\n    </div>\n  )\n};\n\nSlider.propTypes = {\n  any: PropTypes.any,\n  callback: PropTypes.func,\n  type: PropTypes.number,\n}\n\nexport default Slider;","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport dateFns from \"date-fns\";\n\nimport { CalendarContext } from '../../providers/CalendarProvider';\nimport { ColorContext } from '../../providers/ColorProvider';\n\nimport EventItem from './EventItem';\nimport Slider from '../Slider';\n\nimport './events.scss';\n\n/**\n * Event List\n * \n * @param {*} props \n */\nconst Events = (props) => {\n  // calendar context\n  const calendarContext = useContext(CalendarContext);\n  // color context\n  const colorContext = useContext(ColorContext);\n\n  // current\n  const [ current, setCurrent ] = useState(0);\n\n  // callback set current\n  const callback = current => {\n    if (Number.isInteger(current) === false) return false;\n\n    const item = props.items[current];\n    \n    if (item instanceof Object) {\n      const difference = Math.abs(dateFns.differenceInCalendarMonths(\n        dateFns.parse(item.date), calendarContext.currentDate));\n\n      if (difference > 0) {\n        props.onBgColor(colorContext.setNewColor());\n        setCurrent(current);\n\n        calendarContext.setCurrentDate(dateFns.parse(item.date));\n        calendarContext.selectedDateFresh(dateFns.parse(item.date), calendarContext);\n      }\n    }\n  };\n\n  // return\n  return (\n    <div className=\"event\">\n      <div className=\"wrapper\">\n        <div className=\"event--content\">\n          {Array.isArray(props.items) &&\n            <Slider current={current} callback={callback} type={1} items={props.items}>\n                {props.items.map((item, index) =>\n                  <EventItem item={item} key={index} />\n                )}\n          </Slider>}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nEvents.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default Events;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './footer.scss';\n\n//Footer\nconst Footer = () => {\n  // render\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer--info\">\n        <p className=\"copy\">\n          <i className=\"material-icons\">copyright</i>\n\n          <a className=\"to\" href=\"tomail()\">\n            <span className=\"mail\">yeissonibarra@gmail.com</span>\n          </a>\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Translation } from 'react-i18next';\n\nimport './lang-select.scss';\n\n/**\n * Lang Select\n *\n * @class LangSelect\n * @extends {Component}\n */\nclass LangSelect extends Component {\n  /**\n   * get languages\n   *\n   * @param {*} i18n\n   * @returns\n   * @memberof LangSelect\n   */\n  getLanguages(i18n) {\n    if (i18n instanceof Object === false || !i18n) return false;\n\n    if (Array.isArray(i18n.languages)) {\n      const orderLanguages = i18n.languages.sort();\n\n      return orderLanguages.map((item, index) =>\n        <li className=\"lang-select--item\" key={index}>\n          <button className=\"lang\" data-active={i18n.language === item} onClick={() => i18n.changeLanguage(item)}>{item}</button>\n        </li>);\n    }\n\n    return false;\n  }\n\n  /**\n   * render\n   *\n   * @returns\n   * @memberof LangSelect\n   */\n  render() {\n    return (\n      <div className=\"lang-select\">\n        <span className=\"lang-select--icon\">\n          <i className=\"material-icons\">language</i>\n        </span>\n\n        <Translation>\n          { (t, { i18n }) => <ul className=\"lang-select--list\">{this.getLanguages(i18n)}</ul> }\n        </Translation>\n      </div>\n    )\n  }\n}\n\nLangSelect.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default LangSelect;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { CalendarContext } from '../../providers/CalendarProvider';\n\nimport './view-type.scss';\n\n/**\n * Events Header\n * \n * @param {*} props \n */\nconst ViewType = props => {\n  // translate\n  const { t } = useTranslation();\n  // calendar context\n  const calendarContext = useContext(CalendarContext);\n\n  // return\n  return (\n    <div className=\"view-type\">\n      <div className=\"wrapper\">\n        <button\n          className=\"btn\"\n          data-active={props.typeView === 1}\n          onClick={() => props.onTypeView(1)}>\n            <span>{t('calendar')}</span>\n        </button>\n\n        <button\n          className=\"btn\"\n          data-active={props.typeView === 2}\n          onClick={() => props.onTypeView(2)} \n          disabled={Array.isArray(calendarContext.items) && !calendarContext.items.length}>\n            <span>{t('list')}</span>\n        </button>\n      </div>\n    </div>\n  )\n};\n\nViewType.propTypes = {\n  typeView: PropTypes.number,\n  onTypeView: PropTypes.func.isRequired,\n}\n\nexport default ViewType;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LangSelect from '../../components/LangSelect';\nimport ViewType from '../../components/ViewType';\n\nimport './header.scss';\n\n/**\n * Header\n */\nconst Header = props => {\n  // render\n  return (\n    <header className=\"header\">\n      <ViewType {...props} />\n\n      <LangSelect />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default Header;","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CalendarProvider from '../../providers/CalendarProvider';\nimport ColorProvider from '../../providers/ColorProvider';\nimport { MainContext } from '../../providers/MainProvider';\nimport { ThemeContext } from '../../providers/ThemeProvider';\n\nimport Calendar from './../../components/Calendar';\nimport Events from './../../components/Events';\nimport Footer from './../Footer';\nimport Header from './../Header';\n\nimport './content.scss';\n\n// Content\nconst Content = () => {\n  // type\n  const [ typeView, setTypeView ] = useState(1);\n\n  // main context\n  const mainContext = useContext(MainContext);\n\n  // theme context\n  const themeContext = useContext(ThemeContext);\n\n  // on bg color\n  const onBgColor = color => {\n    themeContext.setThemeColor(color);\n  };\n\n  // first mobile\n  const checkView = () => {\n    if (getSize().width <= 480) {\n      setTypeView(2);\n    }\n  };\n\n  // get size\n  const getSize = () => {\n    return {\n      width: document.body.clientWidth || document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight || document.documentElement.clientHeight,\n    };\n  };\n\n  // user\n  useEffect(() => {\n    checkView();\n\n    function handleResize() {\n      checkView();\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  });\n\n  //render\n  return (\n    <CalendarProvider>\n      <ColorProvider>\n        <div className=\"content\">\n          <Header typeView={typeView} onTypeView={setTypeView} />\n          \n          {typeView === 2 &&\n            <Events\n              onBgColor={onBgColor}\n              items={mainContext.items} />}\n\n          {typeView === 1 &&\n            <Calendar\n              items={mainContext.items}\n              onBgColor={onBgColor} \n              setTypeView={setTypeView}\n              typeView={typeView} />}\n          <Footer />\n        </div>\n      </ColorProvider>\n    </CalendarProvider>\n  )\n};\n\nContent.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default Content;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './theme.scss';\n\n// Theme\nconst Theme = props => {\n  // theme ref\n  const themeRef = useRef(null);\n\n  // update CSS Variables\n  const updateCSSVariables = (element, propsCSS) => {\n    if (propsCSS instanceof Object) {\n      Object.entries(propsCSS).forEach(([prop, value]) => {\n        element.current.style.setProperty(prop, value);\n      });\n    }\n  };\n\n  // use effect\n  useEffect(() => {\n    updateCSSVariables(themeRef, props.theme);\n  }, [props.theme]);\n\n  // render\n  return (\n    <div className=\"theme\" ref={themeRef}>\n      {props.children}\n    </div>\n  );\n};\n\nTheme.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default Theme;","import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Content from '../Content';\nimport Theme from '../../components/Theme';\n\nimport MainProvider from '../../providers/MainProvider';\nimport { ThemeProvider, ThemeContext } from '../../providers/ThemeProvider';\n\nimport './../../styles/main.scss';\n\n/**\n * Main\n */\nconst Main = props => {\n  /**\n   * render\n   */\n  return (\n    <Suspense fallback=\"loading...\">\n      <MainProvider>\n        <ThemeProvider {...props}>\n          <ThemeContext.Consumer>\n            {(context) =>\n              <Theme {...context}>\n                <Content {...props} />\n              </Theme>\n            }\n          </ThemeContext.Consumer>\n        </ThemeProvider>\n      </MainProvider>\n    </Suspense>\n  )\n};\n\nMain.propTypes = {\n  any: PropTypes.any,\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\n\nimport Main from './layout/Main';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}